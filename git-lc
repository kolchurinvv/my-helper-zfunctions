#!/bin/zsh

print_usage(){
  echo 'Usage:  git-lc [-flags] "commit message"\n' 2>&1
  echo '  git-lc - add all files and commit locally with a meassage\n'
  echo '  "commit message" - required, the message assigned to the commit'
  echo '\n [-flags]:'
  echo '   -h   prints out this message'
}
# TODO #6 add the ability to just `git commit`, aka for the editor to open a commit dialog instad of using the `-m` flag
isFlagged='false'
onlyStaged='false'
debug='false'

while getopts ':hsd' flag; do
  case "${flag}" in
    h)
      print_usage
      return 0
      ;;
    s)
      isFlagged='true'
      onlyStaged='true'
      ;;
    d)
      isFlagged='true'
      debug='true'
      ;;
    ?)
      printf "Invalid option: -${OPTARG}.\n\n" >&2
      print_usage
      return 1
      ;;
  esac
done

if [[ $isFlagged == 'true' ]]; then
  shift
fi

if [[ $onyStaged == 'false' ]]; then
  echo 'only staged should be false'
  git add . -v
fi


if [[ ${#} -lt 1 ]]; then
  echo 'Must have commit message\n\n'
  echo "Recieved ${#}"
  print_usage
  return 1
fi

if [[ $debug == 'true' ]]; then
  echo '\n\n######################### Debugging mode ON #########################\n\n'
  echo "WARNING: Debugging mode disabpled 'git push' command\n"
  echo "parsed flags: ${flags}"
  if [[ $onlyStaged == 'true' ]]; then
    echo -e "\tListing staged files:"
    printf "\t\033[32m%s\033[0m\n" $(git diff --name-only --cached)
  fi
  echo "message: ${1}"
  echo "is flagged: ${isFlagged}"
  echo '\n\n######################### end of debugging messages #########################\n\n'
  return
fi

git commit -m "${1}"
