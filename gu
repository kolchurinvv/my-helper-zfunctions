#!/bin/zsh

print_usage() {
  echo 'Usage:  gu [-flags] <remote-branch-name> "commit message"'
  echo '  [g]it-[u]p - add all files, commit with a message and push the current branch to a <remote-branch-name>.'
  echo '  "commit message" - message assigned to the commit'
  echo '\n [-flags]:'
  echo '    -h    Prints out this message'
  echo '    -p    Uses [p]revious commit message; "commit message" argument is skipped'
  echo '    -n <branch> Specify a different <remote-branch-name>. Defaults to the same branch if not provided.'
  echo '    -d    Debugging mode ON'
  echo "    -A    Commit only staged files, don't Add All files"
}

get_current_branch() {
  git branch --show-current
}

get_upstream_branch() {
  git rev-parse --abbrev-ref --symbolic-full-name @{u} 2>/dev/null | sed 's/[^\/]*\///'
}

message=
remoteBranchName=
useLastCommit='false'
debuggingMode='OFF'
NoAddAllFiles='false'
flags=''

while getopts ':hpndA:' flag; do
  case "${flag}" in
    h) print_usage; return 0 ;;
    p) useLastCommit='true' ;;
    n) remoteBranchName="${OPTARG}" ;;  # Capture the argument for -n
    d) debuggingMode='ON' ;;
    A) NoAddAllFiles='true' ;;
    *) printf "Invalid option: -${OPTARG}.\n\n" >&2; print_usage; return 1 ;;
  esac
  flags+="${flag} "  # Capture the flags for debugging
done

shift $((OPTIND - 1))

# Default to current branch if no remote branch name is specified
if [[ -z $remoteBranchName ]]; then
  remoteBranchName=$(get_current_branch)
fi

# Check for commit message
if [[ $useLastCommit == 'false' && -z $1 ]]; then
  echo "Error: must provide a commit message unless using -p flag." >&2
  print_usage
  return 1
fi

# Assign commit message if provided
if [[ $useLastCommit == 'false' ]]; then
  message=$1
fi

# Handle file adding
if [[ $NoAddAllFiles == 'true' ]]; then
  echo 'Uploading files:'
  printf "\033[32m%s\033[0m\n" "$(git diff --name-only --cached)"
else
  git add . -A -v
fi

# Commit if not using the last commit
if [[ $useLastCommit == 'false' ]]; then
  git commit -m "$message"
fi

# Debugging output
if [[ $debuggingMode == 'ON' ]]; then
  echo '\n\n######################### Debugging mode ON #########################\n\n'
  echo "WARNING: Debugging mode disables 'git push' command"
  echo "Parsed flags: ${flags}"
  echo "Local active branch name parsed as: $(get_current_branch)"
  echo "Remote branch name is: ${remoteBranchName}"
  echo "Don't add all files flag: ${NoAddAllFiles}"
  echo "Message: ${message}"
  echo "Use last commit: ${useLastCommit}"
  echo '\n\n######################### end of debugging messages #########################\n\n'
  return
fi

# Push to the specified remote branch
git push -u origin "$remoteBranchName"
